<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="clr-namespace:gsCrearClasesTablas_MAUI.Controles"
             x:Class="gsCrearClasesTablas_MAUI.MainPage"
             Appearing="ContentPage_Appearing">
    <!-- Asignar HorizontalOptions para que se adapte el contenido al cambiar el ancho -->
    <Grid ColumnDefinitions="*" RowDefinitions="40,*,30" 
          HorizontalOptions="Fill">
        <!-- Título -->
        <StackLayout Grid.Row="0" BackgroundColor="SteelBlue" VerticalOptions="Center" Padding="4">
            <Label Text="{OnPlatform WinUI='Crear Clases de Tablas (gsCrearClasesTablas_MAUI)', Default='Crear Clases de Tablas'}" 
                   TextColor="White" Padding="2"
                   FontSize="Subtitle" FontAttributes="Bold"
                   HorizontalOptions="FillAndExpand"
                   HorizontalTextAlignment="Center"/>
        </StackLayout>
        <!-- Contenido -->
        <ScrollView Grid.Row="1" Margin="0" Padding="4" Orientation="Both">
            <StackLayout Margin="16,4" Spacing="8">
                <xct:MKNExpander x:Name="expOpcionesSQL" Margin="-10,0"
                                 IsExpanded="True" Expanded="expOpcionesSQL_Expanded"
                                 HeaderTitle="Opciones para SQL Server"/>
                <Frame x:Name="grbSQL" Margin="-8,4">
                    <!-- Con un margin mínimo de 2 se evita que se corte el borde del Frame en la pate inferior -->
                    <StackLayout Style="{StaticResource StackConMargen}" Margin="2">
                        <xct:CheckLabel x:Name="optSQL" IsChecked="True" IsEnabled="False" 
                                        Text="Usar Base de datos de SQL Server" />
                        <StackLayout Orientation="Horizontal">
                            <Label Text="Data source:" WidthRequest="100"/>
                            <Entry x:Name="txtDataSource" Style="{StaticResource EntryText}" WidthRequest="300"/>
                        </StackLayout>
                        <StackLayout Orientation="Horizontal" >
                            <Label Text="Initial catalog:" WidthRequest="100"/>
                            <Entry x:Name="txtInitialCatalog" Style="{StaticResource EntryText}" WidthRequest="300"/>
                        </StackLayout>
                        <StackLayout Style="{StaticResource StackConMargen}">
                            <xct:CheckLabel x:Name="chkSeguridadSQL"
                                            Text="Usar seguridad de SQL"/>
                            <StackLayout Orientation="Horizontal" Spacing="12" Margin="12,0,0,0"
                                         PropertyChanged="StackLayout_PropertyChanged">
                                <StackLayout.Triggers>
                                    <DataTrigger TargetType="StackLayout"
                                                 Binding="{Binding Source={x:Reference chkSeguridadSQL}, Path=IsChecked}"
                                                 Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="StackLayout"
                                                 Binding="{Binding Source={x:Reference chkSeguridadSQL}, Path=IsChecked}"
                                                 Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </StackLayout.Triggers>
                                <StackLayout Spacing="8">
                                    <Label Text="User id:">
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label"
                                                         Binding="{Binding Source={x:Reference txtUserId}, Path=IsEnabled}"
                                                         Value="False">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger TargetType="Label"
                                                         Binding="{Binding Source={x:Reference txtUserId}, Path=IsEnabled}"
                                                         Value="True">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                    <Entry x:Name="txtUserId" Style="{StaticResource EntryText}"/>
                                </StackLayout>
                                <StackLayout Spacing="8">
                                    <Label Text="Password:">
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label"
                                                         Binding="{Binding Source={x:Reference txtPassword}, Path=IsEnabled}"
                                                         Value="False">
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger TargetType="Label"
                                                         Binding="{Binding Source={x:Reference txtPassword}, Path=IsEnabled}"
                                                         Value="True">
                                                <Setter Property="IsEnabled" Value="True" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                    <Entry x:Name="txtPassword" IsPassword="True" Style="{StaticResource EntryText}" />
                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </StackLayout>
                </Frame>
                <xct:MKNExpander x:Name="expOpcionesComandos" Margin="-10,0"
                                 IsExpanded="True" Expanded="expOpcionesComandos_Expanded"
                                 HeaderTitle="Opciones de Comandos"/>
                <Frame x:Name="grbOpcionesComandos" Margin="-8,4">
                    <StackLayout x:Name="grbOpciones" Orientation="Horizontal" 
                                 Style="{StaticResource StackConMargen}" Margin="2"
                                 PropertyChanged="grbOpciones_PropertyChanged">
                        <!-- Esto estará en la parte izquierda -->
                        <StackLayout Margin="0">
                            <xct:CheckLabel x:Name="chkUsarDataAdapter" IsChecked="False"
                                            Text="Usar DataAdapater en lugar de cmd.Execute"/>
                            <xct:CheckLabel x:Name="chkUsarCommandBuilder" IsEnabled="False"
                                            Margin="12,0,0,0"
                                            Text="Usar CommandBuilder">
                                <xct:CheckLabel.Triggers>
                                    <DataTrigger TargetType="xct:CheckLabel"
                                                 Binding="{Binding Source={x:Reference chkUsarDataAdapter}, Path=IsChecked}"
                                                 Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="xct:CheckLabel"
                                                 Binding="{Binding Source={x:Reference chkUsarDataAdapter}, Path=IsChecked}"
                                                 Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </xct:CheckLabel.Triggers>
                            </xct:CheckLabel>
                            <StackLayout Margin="12,0,0,0">
                                <xct:CheckLabel x:Name="chkUsarAddWithValue"
                                                Text="Usar AddWithValue">
                                    <xct:CheckLabel.Triggers>
                                        <DataTrigger TargetType="xct:CheckLabel"
                                                     Binding="{Binding Source={x:Reference chkUsarDataAdapter}, Path=IsChecked}"
                                                     Value="False">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="xct:CheckLabel"
                                                     Binding="{Binding Source={x:Reference chkUsarDataAdapter}, Path=IsChecked}"
                                                     Value="True">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </xct:CheckLabel.Triggers>
                                </xct:CheckLabel>
                                <Label Text="Usar AddWithValue o Add para añadir los valores a los parámetros del comando."
                                       FontSize="13" Margin="12,0,0,0"/>
                            </StackLayout>
                        </StackLayout>
                        <!-- Esto estará en la parte derecha -->
                        <StackLayout Margin="12,0,0,0">
                            <StackLayout>
                                <xct:CheckLabel x:Name="chkUsarOverrides"
                                                Text="Usar Overrides"/>
                                <Label Text="Usar Overrides en los métodos Actualizar, Crear y Borrar."
                                       FontSize="13" Margin="12,0,0,0"/>
                            </StackLayout>
                            <StackLayout>
                                <xct:CheckLabel x:Name="chkPropiedadAuto" IsChecked="True"
                                                Text="Propiedades auto-implementadas"/>
                                <Label Text="Usar propiedades auto-implementadas si el tipo no es String."
                                       FontSize="13" Margin="12,0,0,0"/>
                            </StackLayout>
                            <StackLayout>
                                <xct:CheckLabel x:Name="chkCrearIndizador" IsChecked="False"
                                                Text="Crear indizador (Default Property)"/>
                                <Label Text="Crear el indizador o propiedad predeterminada (en VB)."
                                       FontSize="13" Margin="12,0,0,0"/>
                            </StackLayout>
                        </StackLayout>
                    </StackLayout>
                </Frame>
                <xct:MKNExpander x:Name="expOpcionesTablas" Margin="-10,0"
                                 IsExpanded="True" Expanded="expOpcionesTablas_Expanded"
                                 HeaderTitle="Opciones de las Tablas"/>
                <Frame x:Name="grbTablas" Margin="-8,4">
                    <StackLayout Style="{StaticResource StackConMargen}" Margin="2">
                        <StackLayout Orientation="Horizontal" Spacing="8" HorizontalOptions="StartAndExpand">
                            <StackLayout Orientation="Horizontal" Spacing="8">
                                <Label Text="Tablas:" WidthRequest="100"/>
                                <!-- TODO: Hay que arreglar esto:
                                    Usando Picker ni en Windows se muestran los elementos.
                                    Usando ListView en iOS no se muestran los elementos (pero están).
                                    Usando Picker en iOS se muestran las tablas, en Windows no se muestra el contenido de la lista.
                                -->
                                <!-- Title="Selecciona la tabla a convertir"-->
                                <Picker x:Name="cboTablas" WidthRequest="300" 
                                        IsVisible="{OnPlatform WinUI=False, Default=True}"
                                        ItemDisplayBinding="{Binding Nombre}"
                                        SelectedIndexChanged="cboTablas_SelectedIndexChanged"/>
                                <StackLayout IsVisible="{OnPlatform WinUI=True, Default=False}">
                                    <ListView x:Name="listViewTablas" WidthRequest="300" HeightRequest="45" 
                                              VerticalOptions="StartAndExpand" BackgroundColor="White"
                                              ItemSelected="listViewTablas_ItemSelected">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <ViewCell>
                                                    <Label Text="{Binding Nombre}" HeightRequest="25"
                                                           BackgroundColor="Transparent" TextColor="SteelBlue" />
                                                </ViewCell>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </StackLayout>
                            </StackLayout>
                            <Button x:Name="btnMostrarTablas" Text="Mostrar tablas"
                                    Clicked="btnMostrarTablas_Clicked"/>
                            <Button x:Name="btnLimpiar" Text="Limpiar"
                                    Clicked="btnLimpiar_Clicked"/>
                        </StackLayout>
                        <StackLayout Orientation="Horizontal" Spacing="12">
                            <StackLayout Orientation="Horizontal" Spacing="8">
                                <Label Text="Cadena select:" WidthRequest="100"/>
                                <Entry x:Name="txtSelect" Style="{StaticResource EntryText}" WidthRequest="300"/>
                            </StackLayout>
                        </StackLayout>
                        <Label x:Name="LabelInfoTablas" FontSize="13"/>
                        <StackLayout Style="{StaticResource StackConMargen}" Margin="2">
                            <StackLayout Orientation="Horizontal" Spacing="8" Margin="0">
                                <Label Text="Clase:" WidthRequest="100"/>
                                <Entry x:Name="txtClase" Style="{StaticResource EntryText}" WidthRequest="200"/>
                            </StackLayout>
                            <StackLayout x:Name="grbLenguaje" Orientation="Horizontal" 
                                         PropertyChanged="grbLenguaje_PropertyChanged">
                                <Label Text="Lenguaje:"/>
                                <xct:SwitchLabel x:Name="optVB" Text="Visual Basic" 
                                                 IsToggled="True" Margin="12,0,0,0"
                                                 Toggled="optVB_Toggled">
                                    <xct:SwitchLabel.Triggers>
                                        <DataTrigger TargetType="xct:SwitchLabel"
                                                     Binding="{Binding Source={x:Reference optCS}, Path=IsToggled}"
                                                     Value="False">
                                            <Setter Property="IsToggled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="xct:SwitchLabel"
                                                     Binding="{Binding Source={x:Reference optCS}, Path=IsToggled}"
                                                     Value="True">
                                            <Setter Property="IsToggled" Value="False" />
                                        </DataTrigger>
                                    </xct:SwitchLabel.Triggers>
                                </xct:SwitchLabel>
                                <xct:SwitchLabel x:Name="optCS" Text="C#" 
                                                 IsToggled="False" Margin="8,0,0,0"
                                                 Toggled="optVB_Toggled">
                                    <xct:SwitchLabel.Triggers>
                                        <DataTrigger TargetType="xct:SwitchLabel"
                                                     Binding="{Binding Source={x:Reference optVB}, Path=IsToggled}"
                                                     Value="False">
                                            <Setter Property="IsToggled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="xct:SwitchLabel"
                                                     Binding="{Binding Source={x:Reference optVB}, Path=IsToggled}"
                                                     Value="True">
                                            <Setter Property="IsToggled" Value="False" />
                                        </DataTrigger>
                                    </xct:SwitchLabel.Triggers>
                                </xct:SwitchLabel>
                                <StackLayout Orientation="Horizontal" Margin="{OnPlatform iOS='12,0,0,0', Default='0'}">
                                    <Button x:Name="btnGenerarClase" Text="Generar Clase"
                                        HorizontalOptions="FillAndExpand"
                                        Clicked="btnGenerarClase_Clicked"/>
                                    <Button x:Name="btnCopiarClipBoard" Text="Copiar Clipboard"
                                        Clicked="btnCopiarClipBoard_Clicked" Margin="12,0,0,0"/>
                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </StackLayout>
                </Frame>
                <Frame Margin="-8,4">
                    <StackLayout Style="{StaticResource StackConMargen}" Margin="2" Spacing="6">
                        <Label FontSize="13" Text="Código generado:" 
                               Padding="4" BackgroundColor="WhiteSmoke" HorizontalOptions="FillAndExpand"/>
                        <Editor x:Name="txtCodigo" FontFamily="Consolas" FontSize="14"
                                HeightRequest="500"/>
                    </StackLayout>
                </Frame>
            </StackLayout>
        </ScrollView>
        <!-- Pie de página -->
        <StackLayout Grid.Row="2" 
                     BackgroundColor="WhiteSmoke" Padding="2,4" Margin="6">
            <StackLayout Orientation="Horizontal" Margin="4,0">
                <Label x:Name="LabelInfo" 
                       HorizontalOptions="{OnPlatform WinUI=StartAndExpand, Android=StartAndExpand, Default=Start}"
                       HorizontalTextAlignment="Start"
                       VerticalOptions="Center"
                       WidthRequest="{OnPlatform WinUI=500, Default=300}" 
                       FontSize="{OnPlatform WinUI=13, Android=12, Default=11}"
                       Text="©Guillermo Som (elGuille), 2004-2022" />
                <Label x:Name="LabelVersion" 
                       HorizontalOptions="{OnPlatform WinUI=EndAndExpand, Android=EndAndExpand, Default=End}"
                       HorizontalTextAlignment="End"
                       VerticalOptions="Center"
                       WidthRequest="{OnPlatform WinUI=300, Default=100}" 
                       FontSize="{OnPlatform WinUI=13, Android=12, Default=11}"
                       Text="v3.0.5 (3.0.5.0)" Margin="{OnPlatform WinUI=0, Default='0,0,12,0'}"/>
            </StackLayout>
        </StackLayout>
    </Grid>
</ContentPage>
